<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Fetch API</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <script src="https://code.jquery.com/jquery-latest.min.js"></script>
  <script>
    const url = "https://randomuser.me/api/?results=100"; // Fetching 100 records for demonstration
    const opt = {
      // config for fetch
      mode: "cors", // cross domain request is allowed
    }
    const recordsPerPage = 10;
    let currentPage = 1;

    $(() => {
      // onload callback
      fetchText1();
    })

    const fetchText1 = async () => {
      try {
        let response = await fetch(url, opt)
        let data = await response.json();
        createTable(data);
        createPagination(data);
      } catch (e) {
        console.error(e)
      }
    }

    const createTableHeader = () => {
      // Create table headers
      let tr = $("<tr/>")
        .addClass("bg-gray-200")
        .append($("<th/>").addClass("border px-4 py-2").text("ID"))
        .append($("<th/>").addClass("border px-4 py-2").text("Name"))
        .append($("<th/>").addClass("border px-4 py-2").text("Email"))
        .append($("<th/>").addClass("border px-4 py-2").text("Gender"))
        .append($("<th/>").addClass("border px-4 py-2").text("Location"));
      return tr;
    }

    const createRow = (row) => {
      // Create a table row for each data row
      let location = `${row.location.street.number}, ${row.location.street.name}, ${row.location.city}, ${row.location.state}`;
      let tr = $("<tr/>")
        .addClass("border")
        .append($("<td/>").addClass("border px-4 py-2").text(row.id.value))
        .append($("<td/>").addClass("border px-4 py-2").text(`${row.name.first} ${row.name.last}`))
        .append($("<td/>").addClass("border px-4 py-2").text(row.email))
        .append($("<td/>").addClass("border px-4 py-2").text(row.gender))
        .append($("<td/>").addClass("border px-4 py-2").text(location));
      return tr;
    }

    const createTable = (data) => {
      // Create html table
      let container = $("#myTable");
      container.empty(); // Clear previous content
      let tb = $("<table/>")
        .addClass("w-full")
        .addClass("table-auto")
        .addClass("border-collapse")
        .addClass("border")
        .addClass("rounded-lg")
        .addClass("bg-blue-100");

      // Create and append (to table) header row
      let trh = createTableHeader();
      tb.append(trh);

      let startIdx = (currentPage - 1) * recordsPerPage;
      let endIdx = Math.min(startIdx + recordsPerPage, data.results.length);
      let tbody = $("<tbody/>"); // Define tbody
      for (let i = startIdx; i < endIdx; i++) {
        let tr = createRow(data.results[i]); // Create table row for each data row
        tbody.append(tr);
      }

      tb.append(tbody); // Append tbody to table
      container.append(tb);
    }

    const createPagination = (data) => {
      let totalPages = Math.ceil(data.results.length / recordsPerPage);
      let paginationContainer = $("#pagination");
      paginationContainer.empty(); // Clear previous pagination

      for (let i = 1; i <= totalPages; i++) {
        let button = $("<button/>")
          .addClass("mx-1 py-2 px-4 bg-blue-500 text-white rounded hover:bg-blue-600 focus:outline-none focus:bg-blue-600")
          .text(i)
          .click(() => {
            currentPage = i;
            createTable(data);
            highlightCurrentPageButton();
          });
        paginationContainer.append(button);
      }

      highlightCurrentPageButton();
    }

    const highlightCurrentPageButton = () => {
      $("#pagination button").removeClass("bg-blue-600");
      $(`#pagination button:nth-child(${currentPage})`).addClass("bg-blue-600");
    }
  </script>
</head>
<body class="bg-gray-100">
  <div class="container mx-auto p-4">
    <h1 class="text-xl font-bold mb-4 text-center">User Data</h1>
    <div id="myTable"></div>
    <div id="pagination" class="mt-4"></div> 
  </div>
</body>
</html>
